<Window x:Class="Samm.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:com="clr-namespace:Com.Model;assembly=Com"
        xmlns:local="clr-namespace:Samm"
        Title="ConceptMix Application" 
        x:Name="UI"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        >
    <DockPanel LastChildFill="False">
        <Menu DockPanel.Dock="Top" IsMainMenu="True">
            <MenuItem Header="_File">
                <MenuItem Header="_New" Command="New"/>
                <MenuItem Header="_Open" Command="Open"/>
                <MenuItem Header="_Close" Command="Close"/>
                <MenuItem Header="_Save" Command="Save"/>
                <MenuItem Header="_Save As..." Command="SaveAs"/>
                <MenuItem Header="_Exit"/>
            </MenuItem>
            <MenuItem Header="_Data">
                <MenuItem Header="Add _Data Source">
                    <MenuItem Name="accessDataSourceMenu" Header="Access Database" Click="accessDataSourceMenu_Click"/>
                    <MenuItem Name="sqlServerDataSourceMenu" Header="SQL Server" Click="sqlServerDataSourceMenu_Click"/>
                </MenuItem>
                <MenuItem Header="Remove Data Source"/>
                <MenuItem Header="Add _Table"/>
                <MenuItem Header="Remove Table"/>
                <MenuItem Header="Add _Attribute"/>
                <MenuItem Header="Remove Attribute"/>
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Cut" Command="Cut">
                    <MenuItem.Icon>
                        <Image Source="Images/cut.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Copy" Command="Copy">
                    <MenuItem.Icon>
                        <Image Source="Images/copy.png" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Paste" Command="Paste">
                    <MenuItem.Icon>
                        <Image Source="Images/paste.png" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_View" />
            <MenuItem Header="_Window" />
            <MenuItem Header="_Help" />
        </Menu>

        <!-- Toolbar. See also <ToolBarTray> -->
        <ToolBar DockPanel.Dock ="Top" >
            <Button Content ="Exit" />
            <Separator/>
            <Button Content ="Help" Cursor="Help" />
        </ToolBar>

        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock Name="statBarText" Text="Ready"/>
            </StatusBarItem>
        </StatusBar>

        <Grid>
            <!-- Define the rows and columns -->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <GridSplitter Grid.Column ="1" Width ="5" ResizeDirection="Columns" VerticalAlignment="Stretch" HorizontalAlignment="Center" Background ="AliceBlue" />

            <StackPanel Grid.Column="0" VerticalAlignment="Stretch">
                <Label Name="lblDatasources" FontSize="16" Margin="10,10,0,0" >Data sources</Label>

                <!-- Data source panel -->
                <TreeView Name="DsView" 
                          BorderThickness="0" 
                          ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
                          ItemsSource="{Binding DsModel}">
                    <!--
        Customizing the TreeView to allow multi select: http://stackoverflow.com/questions/459375/customizing-the-treeview-to-allow-multi-select
        -->
                    <!--
            <TreeView.ItemsSource>
                <MultiBinding>
                    <MultiBinding.Converter>
                        <local:CompositeCollectionConverter />
                        </MultiBinding.Converter>
                        <Binding Path="ViewModel.Instructions" />
                        <Binding Path="ViewModel.Children" />
                        <Binding Path="ViewModel.Review" />
                </MultiBinding>
            </TreeView.ItemsSource>
-->
                    <TreeView.Resources>
                        <local:CompositeCollectionConverter x:Name="SubConv" x:Key="SubConv" />

                        <HierarchicalDataTemplate DataType="{x:Type com:Set}">
                            <HierarchicalDataTemplate.ItemsSource>
                                <MultiBinding  Converter="{StaticResource SubConv}">
                                    <Binding Path="SubSets"/>
                                    <Binding Path="GreaterDims"/>
                                </MultiBinding>
                            </HierarchicalDataTemplate.ItemsSource>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=Name}" Foreground="Blue"/>
                            </StackPanel>
                        </HierarchicalDataTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type com:Dim}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=Name}" Foreground="Red"/>
                                <TextBlock Text=" : " Width="10"/>
                                <TextBlock Text="{Binding Path=GreaterSet.Name}"/>
                                <TextBlock Text=" : " Width="10"/>
                                <TextBlock Text="{Binding Path=IsIdentity}"/>
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                    <!--

ItemsSource="{Binding GreaterDimensions}"
Source={x:Static Application.Current}
DataContext="{Binding ElementName=UI}" 
            <TreeViewItem Header="Data source 1">
                <TreeViewItem Header="Table 1">
                    <TreeViewItem Header="Attribute 1">
                    </TreeViewItem>
                </TreeViewItem>
            </TreeViewItem>
-->
                </TreeView>
            </StackPanel>

            <!-- Workspace panel -->
            <StackPanel Grid.Column="2" >
                <Label Name="lblWorkspace" FontSize="16" Margin="10,10,0,0">WORKSPACE PANEL</Label>
            </StackPanel>

            <!-- 
            There are many open sets each showing a DataGrid. We need a global list of all open sets. 
            When a set is open we need to dynamically create a DataGrid with dynamic list of columns corresponding to its dimensions.
            Here we need to dynamically show the currently active grid.

            http://stackoverflow.com/questions/16120010/how-to-dynamically-create-a-datagrid-in-wpf
            Dynamic grid: http://paulstovell.com/blog/dynamic-datagrid
            -->

        </Grid>

    </DockPanel>
</Window>
